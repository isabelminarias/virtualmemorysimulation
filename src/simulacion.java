
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

import static java.lang.Thread.*;
import javax.swing.JTextField;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SAMSUNG_
 */
public class simulacion extends javax.swing.JFrame {
    int marcos;
    int listaNumProceso = -1;
    String[] mVirtual;
    Proceso[] procesos;
    MemoriaPrincipal MP = new MemoriaPrincipal(marcos);
     
    
    
    /**
     * Creates new form simulacion
     */
    public simulacion() {
        initComponents();
    }
    
    public void setMarcos(int m){  
        this.marcos = m;
    }
    
    public int getMarcos(){
        return this.marcos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        processCreateBtn = new javax.swing.JButton();
        numPagProc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ordenPagProc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        processSeqCreateBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        marco1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        marco2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        marco3 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        marco4 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        marco5 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        marco6 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        marco7 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        marco8 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        marco9 = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        marco10 = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        marcosUsados = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        marcosDisplay = new javax.swing.JTextField();
        MemoriaDisplay = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        virtualMemoryArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Procesos");

        processCreateBtn.setText("Crear");
        processCreateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                processCreateBtnMouseClicked(evt);
            }
        });
        processCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processCreateBtnActionPerformed(evt);
            }
        });

        numPagProc.setText("# de paginas");

        jLabel4.setText("Crear proceso :");

        jLabel5.setText("Para especificar el orden no secuencial:");

        ordenPagProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenPagProcActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel8.setText("Escribir el orden asi: 1,4,3,2,5 (o dejarlo en blanco)");

        processSeqCreateBtn.setText("Crear (secuencial)");
        processSeqCreateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                processSeqCreateBtnMouseClicked(evt);
            }
        });
        processSeqCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processSeqCreateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ordenPagProc, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(processSeqCreateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(numPagProc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(processCreateBtn)))
                        .addGap(19, 19, 19))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processCreateBtn)
                    .addComponent(numPagProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ordenPagProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processSeqCreateBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Memoria Principal");

        marco1.setEditable(false);
        marco1.setText("Marco 1");
        marco1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco1ActionPerformed(evt);
            }
        });

        jButton1.setText("Suspender");

        jButton2.setText("Reanudar");

        marco2.setEditable(false);
        marco2.setText("Marco 1");
        marco2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reanudar");

        jButton4.setText("Suspender");

        marco3.setEditable(false);
        marco3.setText("Marco 1");
        marco3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco3ActionPerformed(evt);
            }
        });

        jButton5.setText("Reanudar");

        jButton6.setText("Suspender");

        marco4.setEditable(false);
        marco4.setText("Marco 1");
        marco4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco4ActionPerformed(evt);
            }
        });

        jButton7.setText("Reanudar");

        jButton8.setText("Suspender");

        marco5.setEditable(false);
        marco5.setText("Marco 1");
        marco5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco5ActionPerformed(evt);
            }
        });

        jButton9.setText("Reanudar");

        jButton10.setText("Suspender");

        marco6.setEditable(false);
        marco6.setText("Marco 1");
        marco6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco6ActionPerformed(evt);
            }
        });

        jButton11.setText("Reanudar");

        jButton12.setText("Suspender");

        marco7.setEditable(false);
        marco7.setText("Marco 1");
        marco7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco7ActionPerformed(evt);
            }
        });

        jButton13.setText("Reanudar");

        jButton14.setText("Suspender");

        marco8.setEditable(false);
        marco8.setText("Marco 1");
        marco8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco8ActionPerformed(evt);
            }
        });

        jButton15.setText("Reanudar");

        jButton16.setText("Suspender");

        marco9.setEditable(false);
        marco9.setText("Marco 1");
        marco9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco9ActionPerformed(evt);
            }
        });

        jButton17.setText("Reanudar");

        jButton18.setText("Suspender");

        marco10.setEditable(false);
        marco10.setText("Marco 1");
        marco10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marco10ActionPerformed(evt);
            }
        });

        jButton19.setText("Reanudar");

        jButton20.setText("Suspender");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Suspension de # de Proceso");

        jLabel7.setText("Marcos en uso: ");

        marcosUsados.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        marcosUsados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcosUsadosActionPerformed(evt);
            }
        });

        jLabel9.setText("Marcos:");

        marcosDisplay.setEditable(false);
        marcosDisplay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        marcosDisplay.setText("#");

        MemoriaDisplay.setBackground(new java.awt.Color(255, 204, 204));
        MemoriaDisplay.setText("Start");
        MemoriaDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MemoriaDisplayMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(marco4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco6, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(marco7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(marco10, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(marco1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(51, 51, 51)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(marcosDisplay)
                                .addGap(26, 26, 26))
                            .addComponent(jButton1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(marcosUsados)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MemoriaDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9)
                    .addComponent(marcosDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16)
                    .addComponent(jButton15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18)
                    .addComponent(jButton17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marco10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20)
                    .addComponent(jButton19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(marcosUsados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MemoriaDisplay))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Memoria Virtual");

        virtualMemoryArea.setEditable(false);
        virtualMemoryArea.setColumns(20);
        virtualMemoryArea.setRows(5);
        jScrollPane1.setViewportView(virtualMemoryArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jLabel3)
                .addContainerGap(181, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenPagProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenPagProcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ordenPagProcActionPerformed

    private void marco1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco1ActionPerformed

    private void marco2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco2ActionPerformed

    private void marco3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco3ActionPerformed

    private void marco4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco4ActionPerformed

    private void marco5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco5ActionPerformed

    private void marco6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco6ActionPerformed

    private void marco7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco7ActionPerformed

    private void marco8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco8ActionPerformed

    private void marco9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco9ActionPerformed

    private void marco10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marco10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marco10ActionPerformed

    private void marcosUsadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcosUsadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marcosUsadosActionPerformed

    private void processCreateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_processCreateBtnMouseClicked
        // Creacion de proceso
        int e=0; int i= 0; int o=0;
        int p;
        String pTexto = numPagProc.getText();
        listaNumProceso++;
        
        
        //Checkeo de errores si no se introdujo un digito en el recuadro
        for (i =0; i<pTexto.length();i++){
            if (!Character.isDigit(pTexto.charAt(i))){
                e++;
                System.out.println("char at "+i+" is not digit");
            }
            
        }
        if (Integer.parseInt(pTexto)>10){
            e++;
        }
        else if (Integer.parseInt(pTexto)<1){
            e++;
        }
        
        
        
        
        //Si la verificacion esta bien (no hay e = error), se crea el proceso:
        if (e == 0){
            p = Integer.valueOf(pTexto);    //num de paginas del proceso
            Pagina[] pags = new Pagina[p];  //Array de paginas del proceso
            boolean[] ordenArray = new boolean[p];  //Array del orden en que se ejecutan las paginas
            boolean[] f = new boolean[p];           //Array adicional 
            //Inicializamos los dos arrays de orden en false todo
            for (i = 0; i<p; i++){
                    ordenArray[i]=false;
                    f[i] = false;
                    //System.out.println("ordarray "+i+" = "+ordenArray[i]);
                }
            //Como estamos sin secuencia especificada, el default 
            for (i = 0; i<p;i++){
                    System.out.println("convertimos a array[ "+i+" ] en true");
                    ordenArray[i]=true;
                    for (int j = 0; j<p; j++){
                    System.out.print(" "+j+" = "+ordenArray[j]+" |" );
                    //verificacion de que el array este como lo queremos
                    }
                    
                    f = ordenArray;
                    System.out.println("verificacion del f array");
                    for (int j = 0; j<p; j++){
                    System.out.println("f "+j+" = "+f[j]);
                    }
                    //Creamos la nueva pagina con el orden default 
                    pags[i] = new Pagina(i,p,listaNumProceso);
                    //System.out.println("pagina "+i);
                    pags[i].display();
                    //en este display sale bien el orden de ejecucion
                    ordenArray[i]=false;
                    for (int j = 0; j<p; j++){
                    //System.out.print(" "+j+" = "+ordenArray[j]+" |" );
                    //verificacion de que el array este como lo queremos
                    }
                }
                //Creado el proceso aqui abajo, no sale el orden de ejecucion
                Proceso proc = new Proceso(pags,listaNumProceso);
                proc.display();
                virtualMemoryArea.append(proc.getText());
                //procesos[listaNumProceso-1]=proc;
                for (int k = 0; k<pags.length;k++){
                    Pagina[] pila = proc.getP();
                    MP.addPila(pila[k]);
                }
        }
        
        
    }//GEN-LAST:event_processCreateBtnMouseClicked

    private void processSeqCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processSeqCreateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_processSeqCreateBtnActionPerformed

    private void processSeqCreateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_processSeqCreateBtnMouseClicked
        String poTexto = ordenPagProc.getText();
        String pTexto = numPagProc.getText();
        String[] stArray = poTexto.split(",");
        System.out.println("starray length ="+stArray.length);
        int[] intArray = new int[stArray.length];
        int e=0; int i= 0; 
        int p; 
        listaNumProceso++;
        System.out.println("Proceso numero "+listaNumProceso);
        
        for (i =0; i<pTexto.length();i++){
            if (!Character.isDigit(pTexto.charAt(i))){
                e++;
                System.out.println("Error en "+i+" = "+pTexto.charAt(i));
            }
        }
        //Convertimos el string array de los numeros del jtext en un array de ints
        for (i=0;i<stArray.length;i++){
                intArray[i] = Integer.parseInt(stArray[i]);
                //System.out.println("intarray i="+intArray[i]);
                //System.out.println("int de pos "+i+"es="+intArray[i] );
            }
        
        if (e == 0){
            p = Integer.valueOf(pTexto);
            System.out.println("Paginas a crear: "+p);
            Pagina[] pags = new Pagina[p];
            //boolean[][] op = new boolean[p][];                          //array que me dice en indice (que corresponde a la pagina) cual es el orden de repeticion 
            boolean[] orden = new boolean[intArray.length]; 
            boolean[] f;
            //Inicializo el array de orden todo en falso para solo ponerlo true cuando le toca a una pagina de ser ejecutada
            for (i=0;i<intArray.length;i++){
                orden[i]=false;
            }
            
            //Para ver como es el array de ints
            System.out.println("orden:");
            for (int c=0;c<intArray.length;c++){
                System.out.print(intArray[c]+" |");
            }
            System.out.println("");
            
            
            //Verificacion: si le toca a la pagina i de ejecutar, se pone en el array orden, y una vez se ve
            //en cuales posiciones de todo el array se ejecuta, se crea la pagina. 
                for (int lq = 0; lq<p;lq++){
                    int number = lq;
                    int cont =0;
                    //System.out.println("Number to compare is "+number);
                    //Inicializo el array de orden todo en falso para solo ponerlo true cuando le toca a una pagina de ser ejecutada
                    
                    
                    for (int j=0; j<intArray.length;j++){
                        //System.out.println("IntArray[ "+j+" ] = "+intArray[j]);
                        int n = (intArray[j]-1);
                        //System.out.println("n: "+n+" |  num: "+number);
                        if (number == n){
                            orden[j]=true;
                            cont++;
                            //System.out.println("orden j"+j+"="+orden[j]);
                        }
                        else{
                            orden[j]=false;
                        }
                    }
                    for (int m=0;m<orden.length;m++){
                        //System.out.println("orden i."+m+". ="+orden[m]);
                    }
                    f = orden;
                    for (int l=0; l<f.length; l++){
                        System.out.println("f pos."+l+". = "+f[l]);
                    }
                    
                    Pagina trial = new Pagina(f,cont,lq,listaNumProceso);
                    System.out.println("trial pagina");
                    //trial.getApunNextDisplay();
                    pags[lq]= trial;
                    //pags[lq].setApunNext(trial.getApunNext());
                    pags[lq].display();
                    //System.out.print("Pagina "+lq+"array booleano: ");
                    //pags[lq].getApunNextDisplay();
                    //System.out.println("");
                    //System.out.println("\n reinicializacion terminada, lets start next?");
                    System.out.println("\n lq="+lq);
                    
                }
                System.out.println("");
                System.out.println("=======");
                System.out.println("");
                
                for(i = 0; i<pags.length;i++){
                    System.out.print("Pag[]"+i+" =");
                    pags[i].getApunNextDisplay();
                    System.out.println("");
                }
                
                System.out.println("");
                System.out.println("=======");
                System.out.println("");
                //Esto en caso de que el proceso trabaje mas de una vez una pagina, para que sepa el total de veces
                //que va a correr una de sus paginas
                Proceso proc = new Proceso(pags,intArray.length,listaNumProceso,intArray);
                proc.display();
                virtualMemoryArea.append(proc.getText());
                //procesos[listaNumProceso]=proc;
                for (int k = 0; k<pags.length;k++){
                    Pagina[] pila = proc.getP();
                    MP.addPila(pila[k]);
                }
                
        }
    }//GEN-LAST:event_processSeqCreateBtnMouseClicked

    private void processCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processCreateBtnActionPerformed
        
        
    }//GEN-LAST:event_processCreateBtnActionPerformed

    private void MemoriaDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemoriaDisplayMouseClicked
       int m = Integer.valueOf(marcos);
       boolean textShow = true;
       String[] marcosTD = new String[m];
       marcosDisplay.setText(String.valueOf(marcos));
       JTextField[] marcosFields = new JTextField[m];
       boolean[] avail = new boolean[m];     
        
        
        Thread textUpdate;
        textUpdate = new Thread (new Runnable(){
            public void run() {
                int i = 0;
                while(textShow){
                    
                    switch (m){
                    case 1:
                        marcosFields[0]=marco1;
                        //marco1.setText(marcosTD[0]);
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marco2.setBackground(Color.black);
                        marco3.setBackground(Color.black);
                        marco4.setBackground(Color.black);
                        marco5.setBackground(Color.black);
                        marco6.setBackground(Color.black);
                        marco7.setBackground(Color.black);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 2: 
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setBackground(Color.black);
                        marco4.setBackground(Color.black);
                        marco5.setBackground(Color.black);
                        marco6.setBackground(Color.black);
                        marco7.setBackground(Color.black);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 3:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setBackground(Color.black);
                        marco5.setBackground(Color.black);
                        marco6.setBackground(Color.black);
                        marco7.setBackground(Color.black);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 4: 
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        
                        marco5.setBackground(Color.black);
                        marco6.setBackground(Color.black);
                        marco7.setBackground(Color.black);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 5:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        marcosFields[4]=marco5;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        marco5.setText(marcosTD[4]);
                        marco6.setBackground(Color.black);
                        marco7.setBackground(Color.black);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 6:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        marcosFields[4]=marco5;
                        marcosFields[5]=marco6;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        marco5.setText(marcosTD[4]);
                        marco6.setText(marcosTD[5]);
                        marco7.setBackground(Color.black);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 7:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        marcosFields[4]=marco5;
                        marcosFields[5]=marco6;
                        marcosFields[6]=marco7;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        marco5.setText(marcosTD[4]);
                        marco6.setText(marcosTD[5]);
                        marco7.setText(marcosTD[6]);
                        marco8.setBackground(Color.black);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 8:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        marcosFields[4]=marco5;
                        marcosFields[5]=marco6;
                        marcosFields[6]=marco7;
                        marcosFields[7]=marco8;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        marco5.setText(marcosTD[4]);
                        marco6.setText(marcosTD[5]);
                        marco7.setText(marcosTD[6]);
                        marco8.setText(marcosTD[7]);
                        marco9.setBackground(Color.black);
                        marco10.setBackground(Color.black);
                    break;
                    case 9:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        marcosFields[4]=marco5;
                        marcosFields[5]=marco6;
                        marcosFields[6]=marco7;
                        marcosFields[7]=marco8;
                        marcosFields[8]=marco9;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        marco5.setText(marcosTD[4]);
                        marco6.setText(marcosTD[5]);
                        marco7.setText(marcosTD[6]);
                        marco8.setText(marcosTD[7]);
                        marco9.setText(marcosTD[8]);
                        marco10.setBackground(Color.black);
                    break;
                    case 10:
                        for (i = 0; i<m; i++){
                            avail[i]=true;
                        }
                        marcosFields[0]=marco1;
                        marcosFields[1]=marco2;
                        marcosFields[2]=marco3;
                        marcosFields[3]=marco4;
                        marcosFields[4]=marco5;
                        marcosFields[5]=marco6;
                        marcosFields[6]=marco7;
                        marcosFields[7]=marco8;
                        marcosFields[8]=marco9;
                        marcosFields[9]=marco10;
                        
                        marco1.setText(marcosTD[0]);
                        marco2.setText(marcosTD[1]);
                        marco3.setText(marcosTD[2]);
                        marco4.setText(marcosTD[3]);
                        marco5.setText(marcosTD[4]);
                        marco6.setText(marcosTD[5]);
                        marco7.setText(marcosTD[6]);
                        marco8.setText(marcosTD[7]);
                        marco9.setText(marcosTD[8]);
                        marco10.setText(marcosTD[9]);
                    break;
                }
                   
                }
            }    
        });
        
        textUpdate.start();
        try {
            textUpdate.sleep(10);
        } catch (InterruptedException ex) {
            Logger.getLogger(simulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        textUpdate.stop();
        
        for (int i = 0; i<m; i++){
           marcosFields[i].setText("");
       } 
        
        Thread processing;
        processing = new Thread (new Runnable(){
            public void run(){
                for (int i = 0; i < m; i++){
                    System.out.print("marco "+i+" = ");
                    String t = marcosFields[i].getText();
                    System.out.print(t+"| \n");
                    if(avail[i]){
                        System.out.println("TRUTH");
                    }
                }
                
                for (int i = 0; i < m; i++){
                    if (avail[i]){
                        MP.addEjec(MP.pushPila());
                        marcosFields[i].setText(String.valueOf(MP.getPaginaEjec(i).getId()));
                    }
                    
                }
                
                
                
                
                
            //end of run down here    
            }
        });
        processing.start();
            
                
                
        
    }//GEN-LAST:event_MemoriaDisplayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new simulacion().setVisible(true);
                
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MemoriaDisplay;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField marco1;
    private javax.swing.JTextField marco10;
    private javax.swing.JTextField marco2;
    private javax.swing.JTextField marco3;
    private javax.swing.JTextField marco4;
    private javax.swing.JTextField marco5;
    private javax.swing.JTextField marco6;
    private javax.swing.JTextField marco7;
    private javax.swing.JTextField marco8;
    private javax.swing.JTextField marco9;
    private javax.swing.JTextField marcosDisplay;
    private javax.swing.JTextField marcosUsados;
    private javax.swing.JTextField numPagProc;
    private javax.swing.JTextField ordenPagProc;
    private javax.swing.JButton processCreateBtn;
    private javax.swing.JButton processSeqCreateBtn;
    private javax.swing.JTextArea virtualMemoryArea;
    // End of variables declaration//GEN-END:variables
}
